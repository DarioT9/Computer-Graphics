#version 450#extension GL_ARB_separate_shader_objects : enable// Input variables received from the Vertex Shader// The locations must match the corresponding output variables in the Vertex Shaderlayout(location = 0) in vec2 fragUV; // Texture coordinates// Output color of the fragment// Typically, location 0 is used for the primary color outputlayout(location = 0) out vec4 outColor;// Texture sampler (binding must match the descriptor set in the application)layout(set = 0, binding = 1) uniform sampler2D tex;// Main fragment shader// Implements a simple model where the color is directly taken from the texturevoid main() {	// Sample the texture using the provided UV coordinates	vec3 Emit = texture(tex, fragUV).rgb;	// Output the sampled texture color with full opacity (alpha = 1.0)	outColor = vec4(Emit, 1.0f);}